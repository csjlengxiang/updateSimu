<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BLL.Fakes</name>
    </assembly>
    <members>
        <member name="T:BLL.Fakes.ShimBackgroundService">
            <summary>BLL.BackgroundService 的填充码类型</summary>
        </member>
        <member name="M:BLL.Fakes.ShimBackgroundService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BLL.Fakes.ShimBackgroundService.#ctor(BLL.BackgroundService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BLL.Fakes.ShimBackgroundService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimBackgroundService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimBackgroundService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimBackgroundService.ConstructorString">
            <summary>设置 BackgroundService.BackgroundService(String com) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimBackgroundService.OperString">
            <summary>设置 BackgroundService.Oper(String sp) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimBackgroundService.ZFString">
            <summary>设置 BackgroundService.ZF(String msg) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimBackgroundService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimBackgroundService.AllInstances.OperString">
            <summary>设置 BackgroundService.Oper(String sp) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimBackgroundService.AllInstances.ZFString">
            <summary>设置 BackgroundService.ZF(String msg) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimDXService">
            <summary>BLL.DXService 的填充码类型</summary>
        </member>
        <member name="M:BLL.Fakes.ShimDXService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BLL.Fakes.ShimDXService.#ctor(BLL.DXService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BLL.Fakes.ShimDXService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimDXService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimDXService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimDXService.Constructor">
            <summary>设置 DXService.DXService() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimDXService.InsertStringStringStringString">
            <summary>设置 DXService.Insert(String jsrid, String tim, String msg, String type) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimDXService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimDXService.AllInstances.InsertStringStringStringString">
            <summary>设置 DXService.Insert(String jsrid, String tim, String msg, String type) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimInternetService">
            <summary>BLL.InternetService 的填充码类型</summary>
        </member>
        <member name="M:BLL.Fakes.ShimInternetService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BLL.Fakes.ShimInternetService.#ctor(BLL.InternetService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BLL.Fakes.ShimInternetService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimInternetService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimInternetService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimInternetService.ConstructorString">
            <summary>设置 InternetService.InternetService(String com) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimInternetService.OperString">
            <summary>设置 InternetService.Oper(String str) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimInternetService.SendString">
            <summary>设置 InternetService.Send(String str) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimInternetService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimInternetService.AllInstances.OperString">
            <summary>设置 InternetService.Oper(String str) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimInternetService.AllInstances.SendString">
            <summary>设置 InternetService.Send(String str) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimLogService">
            <summary>BLL.LogService 的填充码类型</summary>
        </member>
        <member name="M:BLL.Fakes.ShimLogService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BLL.Fakes.ShimLogService.#ctor(BLL.LogService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BLL.Fakes.ShimLogService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimLogService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimLogService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimLogService.Constructor">
            <summary>设置 LogService.LogService() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimLogService.MessStringString">
            <summary>设置 LogService.Mess(String data, String path) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimLogService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimSendService">
            <summary>BLL.SendService 的填充码类型</summary>
        </member>
        <member name="M:BLL.Fakes.ShimSendService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BLL.Fakes.ShimSendService.#ctor(BLL.SendService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BLL.Fakes.ShimSendService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimSendService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.Constructor">
            <summary>设置 SendService.SendService() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.StaticConstructor">
            <summary>设置 SendService.SendService() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.UrlEncodeStringEncoding">
            <summary>设置 SendService.UrlEncode(String text, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.parseResultString">
            <summary>设置 SendService.parseResult(String sResult) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.sendBatchStringStringUInt32UInt32">
            <summary>设置 SendService.sendBatch(String mobile, String content, UInt32 uCgid, UInt32 uCsid) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.sendOnceStringStringUInt32UInt32">
            <summary>设置 SendService.sendOnce(String mobile, String content, UInt32 uCgid, UInt32 uCsid) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.sendParamStringStringStringArrayUInt32UInt32">
            <summary>设置 SendService.sendParam(String mobile, String content, String[] param, UInt32 uCgid, UInt32 uCsid) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.sendQueryStringString">
            <summary>设置 SendService.sendQuery(String url, String param) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimSendService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.AllInstances.UrlEncodeStringEncoding">
            <summary>设置 SendService.UrlEncode(String text, Encoding encoding) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.AllInstances.parseResultString">
            <summary>设置 SendService.parseResult(String sResult) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.AllInstances.sendBatchStringStringUInt32UInt32">
            <summary>设置 SendService.sendBatch(String mobile, String content, UInt32 uCgid, UInt32 uCsid) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.AllInstances.sendOnceStringStringUInt32UInt32">
            <summary>设置 SendService.sendOnce(String mobile, String content, UInt32 uCgid, UInt32 uCsid) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.AllInstances.sendParamStringStringStringArrayUInt32UInt32">
            <summary>设置 SendService.sendParam(String mobile, String content, String[] param, UInt32 uCgid, UInt32 uCsid) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimSendService.AllInstances.sendQueryStringString">
            <summary>设置 SendService.sendQuery(String url, String param) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimUdpService">
            <summary>BLL.UdpService 的填充码类型</summary>
        </member>
        <member name="M:BLL.Fakes.ShimUdpService.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BLL.Fakes.ShimUdpService.#ctor(BLL.UdpService)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BLL.Fakes.ShimUdpService.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimUdpService.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimUdpService.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimUdpService.ConstructorStringStringStringStringUdpServiceReciveDelege">
            <summary>设置 UdpService.UdpService(String localIP, String localPort, String sendIP, String sendPort, UdpServiceReciveDelege _udpServiceRecive) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimUdpService.SendString">
            <summary>设置 UdpService.Send(String msg) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimUdpService._ctorb__0Object">
            <summary>设置 UdpService.&lt;.ctor&gt;b__0(Object m) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimUdpService.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimUdpService.AllInstances.SendString">
            <summary>设置 UdpService.Send(String msg) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimUdpService.AllInstances._ctorb__0Object">
            <summary>设置 UdpService.&lt;.ctor&gt;b__0(Object m) 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimcsjSerialPort">
            <summary>BLL.csjSerialPort 的填充码类型</summary>
        </member>
        <member name="M:BLL.Fakes.ShimcsjSerialPort.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:BLL.Fakes.ShimcsjSerialPort.#ctor(BLL.csjSerialPort)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:BLL.Fakes.ShimcsjSerialPort.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimcsjSerialPort.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:BLL.Fakes.ShimcsjSerialPort.Bind(System.ComponentModel.IComponent)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:BLL.Fakes.ShimcsjSerialPort.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.Close">
            <summary>设置 csjSerialPort.Close() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.ConstructorcsjSerialPortDataReceivedBufStringInt32Int32ParityInt32StopBits">
            <summary>设置 csjSerialPort.csjSerialPort(csjSerialPortDataReceivedBuf _DataReceived, String _com, Int32 _maxLen, Int32 _rate, Parity _parity, Int32 _bit, StopBits _sb) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.ConstructorcsjSerialPortDataReceivedStrStringInt32Int32ParityInt32StopBits">
            <summary>设置 csjSerialPort.csjSerialPort(csjSerialPortDataReceivedStr _DataReceived, String _com, Int32 _maxLen, Int32 _rate, Parity _parity, Int32 _bit, StopBits _sb) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.DataReceivedBufAddcsjSerialPortDataReceivedBuf">
            <summary>设置 csjSerialPort.add_DataReceivedBuf(csjSerialPortDataReceivedBuf value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.DataReceivedBufRemovecsjSerialPortDataReceivedBuf">
            <summary>设置 csjSerialPort.remove_DataReceivedBuf(csjSerialPortDataReceivedBuf value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.DataReceivedStrAddcsjSerialPortDataReceivedStr">
            <summary>设置 csjSerialPort.add_DataReceivedStr(csjSerialPortDataReceivedStr value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.DataReceivedStrRemovecsjSerialPortDataReceivedStr">
            <summary>设置 csjSerialPort.remove_DataReceivedStr(csjSerialPortDataReceivedStr value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.Open">
            <summary>设置 csjSerialPort.Open() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.ProcBufInt32Int32">
            <summary>设置 csjSerialPort.ProcBuf(Int32 start, Int32 cnt) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.ReadPort">
            <summary>设置 csjSerialPort.ReadPort() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.SendByteArray">
            <summary>设置 csjSerialPort.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.SendString">
            <summary>设置 csjSerialPort.Send(String str) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.StartReading">
            <summary>设置 csjSerialPort.StartReading() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.StopReading">
            <summary>设置 csjSerialPort.StopReading() 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.ShimcsjSerialPort.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.Close">
            <summary>设置 csjSerialPort.Close() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.DataReceivedBufAddcsjSerialPortDataReceivedBuf">
            <summary>设置 csjSerialPort.add_DataReceivedBuf(csjSerialPortDataReceivedBuf value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.DataReceivedBufRemovecsjSerialPortDataReceivedBuf">
            <summary>设置 csjSerialPort.remove_DataReceivedBuf(csjSerialPortDataReceivedBuf value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.DataReceivedStrAddcsjSerialPortDataReceivedStr">
            <summary>设置 csjSerialPort.add_DataReceivedStr(csjSerialPortDataReceivedStr value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.DataReceivedStrRemovecsjSerialPortDataReceivedStr">
            <summary>设置 csjSerialPort.remove_DataReceivedStr(csjSerialPortDataReceivedStr value) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.Open">
            <summary>设置 csjSerialPort.Open() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.ProcBufInt32Int32">
            <summary>设置 csjSerialPort.ProcBuf(Int32 start, Int32 cnt) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.ReadPort">
            <summary>设置 csjSerialPort.ReadPort() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.SendByteArray">
            <summary>设置 csjSerialPort.Send(Byte[] data) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.SendString">
            <summary>设置 csjSerialPort.Send(String str) 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.StartReading">
            <summary>设置 csjSerialPort.StartReading() 的 填充码</summary>
        </member>
        <member name="P:BLL.Fakes.ShimcsjSerialPort.AllInstances.StopReading">
            <summary>设置 csjSerialPort.StopReading() 的 填充码</summary>
        </member>
        <member name="T:BLL.Fakes.StubBackgroundService">
            <summary>BLL.BackgroundService 的存根类型</summary>
        </member>
        <member name="M:BLL.Fakes.StubBackgroundService.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubBackgroundService.InitializeStub">
            <summary>初始化 type StubBackgroundService 的新实例</summary>
        </member>
        <member name="P:BLL.Fakes.StubBackgroundService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BLL.Fakes.StubBackgroundService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BLL.Fakes.StubBackgroundService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BLL.Fakes.StubDXService">
            <summary>BLL.DXService 的存根类型</summary>
        </member>
        <member name="M:BLL.Fakes.StubDXService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubDXService.InitializeStub">
            <summary>初始化 type StubDXService 的新实例</summary>
        </member>
        <member name="P:BLL.Fakes.StubDXService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BLL.Fakes.StubDXService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BLL.Fakes.StubDXService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BLL.Fakes.StubInternetService">
            <summary>BLL.InternetService 的存根类型</summary>
        </member>
        <member name="M:BLL.Fakes.StubInternetService.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubInternetService.InitializeStub">
            <summary>初始化 type StubInternetService 的新实例</summary>
        </member>
        <member name="P:BLL.Fakes.StubInternetService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BLL.Fakes.StubInternetService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BLL.Fakes.StubInternetService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BLL.Fakes.StubLogService">
            <summary>BLL.LogService 的存根类型</summary>
        </member>
        <member name="M:BLL.Fakes.StubLogService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubLogService.InitializeStub">
            <summary>初始化 type StubLogService 的新实例</summary>
        </member>
        <member name="P:BLL.Fakes.StubLogService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BLL.Fakes.StubLogService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BLL.Fakes.StubLogService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BLL.Fakes.StubSendService">
            <summary>BLL.SendService 的存根类型</summary>
        </member>
        <member name="M:BLL.Fakes.StubSendService.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubSendService.InitializeStub">
            <summary>初始化 type StubSendService 的新实例</summary>
        </member>
        <member name="P:BLL.Fakes.StubSendService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BLL.Fakes.StubSendService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BLL.Fakes.StubSendService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BLL.Fakes.StubUdpService">
            <summary>BLL.UdpService 的存根类型</summary>
        </member>
        <member name="M:BLL.Fakes.StubUdpService.#ctor(System.String,System.String,System.String,System.String,BLL.UdpServiceReciveDelege)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubUdpService.InitializeStub">
            <summary>初始化 type StubUdpService 的新实例</summary>
        </member>
        <member name="P:BLL.Fakes.StubUdpService.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BLL.Fakes.StubUdpService.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BLL.Fakes.StubUdpService.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:BLL.Fakes.StubcsjSerialPort">
            <summary>BLL.csjSerialPort 的存根类型</summary>
        </member>
        <member name="M:BLL.Fakes.StubcsjSerialPort.#ctor(BLL.csjSerialPortDataReceivedBuf,System.String,System.Int32,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubcsjSerialPort.#ctor(BLL.csjSerialPortDataReceivedStr,System.String,System.Int32,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:BLL.Fakes.StubcsjSerialPort.AttachBackingFieldToSite">
            <summary>附加委托以将 StubcsjSerialPort.Site 作为具有支持字段的属性进行模拟。</summary>
        </member>
        <member name="F:BLL.Fakes.StubcsjSerialPort.CanRaiseEventsGet">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="M:BLL.Fakes.StubcsjSerialPort.Dispose(System.Boolean)">
            <summary>设置 SerialPort.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:BLL.Fakes.StubcsjSerialPort.DisposeBoolean">
            <summary>设置 SerialPort.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:BLL.Fakes.StubcsjSerialPort.GetService(System.Type)">
            <summary>设置 Component.GetService(Type service) 的 存根</summary>
        </member>
        <member name="F:BLL.Fakes.StubcsjSerialPort.GetServiceType">
            <summary>设置 Component.GetService(Type service) 的 stub</summary>
        </member>
        <member name="M:BLL.Fakes.StubcsjSerialPort.InitializeStub">
            <summary>初始化 type StubcsjSerialPort 的新实例</summary>
        </member>
        <member name="F:BLL.Fakes.StubcsjSerialPort.SiteGet">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
        <member name="F:BLL.Fakes.StubcsjSerialPort.SiteSetISite">
            <summary>设置 Component.set_Site(ISite value) 的 stub</summary>
        </member>
        <member name="M:BLL.Fakes.StubcsjSerialPort.ToString">
            <summary>设置 Component.ToString() 的 存根</summary>
        </member>
        <member name="F:BLL.Fakes.StubcsjSerialPort.ToString01">
            <summary>设置 Component.ToString() 的 stub</summary>
        </member>
        <member name="P:BLL.Fakes.StubcsjSerialPort.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:BLL.Fakes.StubcsjSerialPort.CanRaiseEvents">
            <summary>设置 Component.get_CanRaiseEvents() 的 stub</summary>
        </member>
        <member name="P:BLL.Fakes.StubcsjSerialPort.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:BLL.Fakes.StubcsjSerialPort.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:BLL.Fakes.StubcsjSerialPort.Site">
            <summary>设置 Component.get_Site() 的 stub</summary>
        </member>
    </members>
</doc>
